interface Content {
    """
    ID of the content
    """
    id: UUID!

    """
    Metadata of the content
    """
    metadata: ContentMetadata!
    """
    Progress data of the content for the current user.
    """
    userProgressData: UserProgressData!
    """
    Progress data of the specified user.
    """
    progressDataForUser(userId: UUID!): UserProgressData!
}

type ContentMetadata {
    """
    Name of the content
    """
    name: String!
    """
    Content type
    """
    type: ContentType!
    """
    Suggested date when the content should be done
    """
    suggestedDate: DateTime!
    """
    Number of reward points a student receives for completing this content
    """
    rewardPoints: Int!
    """
    ID of the chapter this content is associated with
    """
    chapterId: UUID!
    """
    TagNames this content is tagged with
    """
    tagNames: [String!]!
}

type MediaContent implements Content {
    # Inherited fields
    """
    ID of the content
    """
    id: UUID!

    """
    Metadata of the content
    """
    metadata: ContentMetadata!

    """
    Progress data of the content for the current user.
    """
    userProgressData: UserProgressData!
    """
    Progress data of the specified user.
    """
    progressDataForUser(userId: UUID!): UserProgressData!
}

interface Assessment implements Content {

    """
    Assessment metadata
    """
    assessmentMetadata: AssessmentMetadata!

    # inherited fields
    """
    ID of the content
    """
    id: UUID!
    """
    Metadata of the content
    """
    metadata: ContentMetadata!
    """
    Progress data of the content for the current user.
    """
    userProgressData: UserProgressData!
    """
    Progress data of the specified user.
    """
    progressDataForUser(userId: UUID!): UserProgressData!
}

type AssessmentMetadata {
    """
    Number of skill points a student receives for completing this content
    """
    skillPoints: Int! # TODO skill concept done in the future
    """
    Type of the assessment
    """
    skillType: SkillType!
    """
    The initial learning interval for the assessment in days.
    This is the interval that is applied after the assessment is completed the first time.
    Following intervals are calculated based on the previous interval and the user's performance.
    If this is null, the assessment will never be scheduled for review, which
    is useful for assessments that are not meant to be repeated.
    """
    initialLearningInterval: Int
}

"""
A set of flashcards, flashcard related fields are stored in the flashcard service.
"""
type FlashcardSetAssessment implements Assessment & Content {
    # inherited fields
    """
    Assessment metadata
    """
    assessmentMetadata: AssessmentMetadata!
    """
    ID of the content
    """
    id: UUID!
    """
    Metadata of the content
    """
    metadata: ContentMetadata!

    """
    Progress data of the content for the current user.
    """
    userProgressData: UserProgressData!
    """
    Progress data of the specified user.
    """
    progressDataForUser(userId: UUID!): UserProgressData!
}

"""
A quiz, quiz related fields are stored in the quiz service.
"""
type QuizAssessment implements Assessment & Content {
    # inherited fields
    """
    Assessment metadata
    """
    assessmentMetadata: AssessmentMetadata!
    """
    ID of the content
    """
    id: UUID!
    """
    Metadata of the content
    """
    metadata: ContentMetadata!

    """
    Progress data of the content for the current user.
    """
    userProgressData: UserProgressData!
    """
    Progress data of the specified user.
    """
    progressDataForUser(userId: UUID!): UserProgressData!
}

# add more types here

"""
Type of the assessment
"""
enum SkillType {
    REMEMBER
    UNDERSTAND
    APPLY
    ANALYSE
}

# for filtering
"""
Type of the content
"""
enum ContentType {
    MEDIA
    FLASHCARDS
    QUIZ
    # add more types here
}
