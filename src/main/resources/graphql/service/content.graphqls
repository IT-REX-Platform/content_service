interface Content {
    """
    ID of the content
    """
    id: UUID!

    """
    Metadata of the content
    """
    metadata: ContentMetadata!
    """
    Progress data of the content, specific to given users.
    If userId is not provided, the progress data of the current user is returned.
    If the user has no permission to view the progress data to one or of the provided users, an error is thrown.
    """
    userProgressData(userId: UUID): ProgressData!
}

type ContentMetadata {
    """
    Name of the content
    """
    name: String!
    """
    Content type
    """
    type: ContentType!
    """
    Number of reward points a student receives for completing this content
    """
    rewardPoints: Int!
    """
    ID of the chapter this content is associated with
    """
    chapterId: UUID!
    """
    TagNames this content is tagged with
    """
    tagNames: [String!]!
}

type MediaContent implements Content {
    # Inherited fields
    """
    ID of the content
    """
    id: UUID!

    """
    Metadata of the content
    """
    metadata: ContentMetadata!

    """
    Progress data of the content, specific to given users.
    If userId is not provided, the progress data of the current user is returned.
    If the user has no permission to view the progress data to one or of the provided users, an error is thrown.
    """
    userProgressData(userId: UUID): ProgressData!
}

interface Assessment implements Content {

    """
    Assessment metadata
    """
    assessmentMetadata: AssessmentMetadata!

    # inherited fields
    """
    ID of the content
    """
    id: UUID!
    """
    Metadata of the content
    """
    metadata: ContentMetadata!
    """
    Progress data of the content, specific to given users.
    If userId is not provided, the progress data of the current user is returned.
    If the user has no permission to view the progress data to one or of the provided users, an error is thrown.
    """
    userProgressData(userId: UUID): ProgressData!
}

type AssessmentMetadata {
    """
    Number of skill points a student receives for completing this content
    """
    skillPoints: Int! # TODO skill concept done in the future
    """
    Type of the assessment
    """
    skillType: SkillType!
}

"""
A set of flashcards, flashcard related fields are stored in the flashcard service.
"""
type FlashcardSetAssessment implements Assessment & Content {
    # inherited fields
    """
    Assessment metadata
    """
    assessmentMetadata: AssessmentMetadata!
    """
    ID of the content
    """
    id: UUID!
    """
    Metadata of the content
    """
    metadata: ContentMetadata!

    """
    Progress data of the content, specific to given users.
    If userId is not provided, the progress data of the current user is returned.
    If the user has no permission to view the progress data to one or of the provided users, an error is thrown.
    """
    userProgressData(userId: UUID): ProgressData!
}

# add more types here

"""
Type of the assessment
"""
enum SkillType {
    REMEMBER
    UNDERSTAND
    APPLY
    ANALYSE
}

# for filtering
"""
Type of the content
"""
enum ContentType {
    MEDIA
    FLASHCARDS
    # add more types here
}
