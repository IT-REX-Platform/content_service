type Query {
    """
    get all contents
    """
    contents: ContentPayload!
    """
    Get contents by ids. Throws an error if any of the ids are not found.
    """
    contentsByIds(ids: [UUID!]!): [Content!]!

    """
    Get contents by ids. If any of the given ids are not found, the corresponding element in the result list will be null.
    """
    findContentsByIds(ids: [UUID!]!): [Content]!

    """
    get contents by chapter ids. Returns a list containing sublists, where each sublist contains all contents
    associated with that chapter
    """
    contentsByChapterIds(chapterIds: [UUID!]!): [[Content!]!]!

    """
    Retrieves all existing sections for multiple chapters.
    """
    sectionsByChapterIds(chapterIds: [UUID!]!): [[Section!]!]!

    """
    Retrieve progress for multiple chapters
    """
    progressByChapterIds(chapterIds: [UUID!]!): [CompositeProgressInformation!]!

    """
    Generates user specific suggestions for multiple chapters.

    Only content that the user can access will be considered.
    The contents will be ranked by suggested date, with the most overdue or most urgent content first.
    """
    suggestionsByChapterIds(
        """
        The ids of the chapters for which suggestions should be generated.
        """
        chapterIds: [UUID!]!,
        """
        The amount of suggestions to generate in total.
        """
        amount: Int!,
        """
        Only suggestions for these skill types will be generated.
        If no skill types are given, suggestions for all skill types will be generated,
        also containing suggestions for media content (which do not have a skill type).
        """
        skillTypes: [SkillType!]! = []): [Suggestion!]!

    """
    Retrieves all skill types that are achievable for the given chapters.
    Each chapter will have its own list of skill types (batching query).
    """
    _internal_noauth_achievableSkillTypesByChapterIds(chapterIds: [UUID!]!): [[SkillType!]!]!

    """
    Retrieves all Content that is currently not part of any section within chapters.
    """
    _internal_noauth_contentWithNoSectionByChapterIds(chapterIds: [UUID!]!): [[Content!]!]!

}

type ContentPayload {
    """
    the contents
    """
    elements: [Content!]!
    """
    pagination info
    """
    pageInfo: PaginationInfo!
}

type CompositeProgressInformation {

    """
    percentage of completedContents/totalContents
    """
    progress: Float!
    """
    absolut number of completed content
    """
    completedContents: Int!
    """
    absolut number of total content
    """
    totalContents: Int!
}
