type Mutation {
    """
    Create new media content
    """
    createMediaContent(input: CreateMediaContentInput!): MediaContent!

    """
    Create a new Assessment
    """
    createAssessment(input: CreateAssessmentInput!): Assessment!

    """
    Modify Content
    """
    mutateContent(contentId: UUID!): ContentMutation!

    """
    Create new Section
    """
    createSection(input: CreateSectionInput!): Section!

    """
    Modify Sections
    """
    mutateSection(sectionId: UUID!): SectionMutation!

}

type ContentMutation{

    """
    Identifier of Content
    """
    contentId: UUID!

    """
    Update an existing Content
    """
    updateMediaContent(input: UpdateMediaContentInput!): MediaContent!

    """
    Update an existing Assessment
    """
    updateAssessment(input: UpdateAssessmentInput!): Assessment!

    """
    Delete an existing Content, throws an error if no Content with the given id exists
    """
    deleteContent: UUID!

    """
    Add a tag to an existing content
    """
    addTagToContent(tagName: String): Content!

    """
    Remove a tag from an existing content
    """
    removeTagFromContent(tagName: String): Content!

}

type SectionMutation {

    """
    Identifier of the section
    """
    sectionId: UUID!
    """
    update the name of a Section
    """
    updateSectionName(name: String!): Section!

    """
    delete a Section by ID
    """
    deleteSection: UUID!

    """
    create new Stage in Section
    """
    createStage(input: CreateStageInput): Stage!

    """
    Update Content of Stage
    """
    updateStage(input: UpdateStageInput): Stage!

    """
    delete Stage by ID
    """
    deleteStage(id: UUID!):UUID!

    """
    update Order of Stages within a Section
    """
    updateStageOrder(stages: [UUID!]!):Section!
}

"""
Input for creating new media content. Media specific fields are stored in the Media Service.
"""
input CreateMediaContentInput {
    """
    Metadata for the new Content
    """
    metadata: CreateContentMetadataInput!
}

input UpdateMediaContentInput {
    """
    Metadata for the new Content
    """
    metadata: UpdateContentMetadataInput!
}

input CreateAssessmentInput {
    """
    Metadata for the new Content
    """
    metadata: CreateContentMetadataInput!
    """
    Assessment metadata
    """
    assessmentMetadata: AssessmentMetadataInput!
}

input UpdateAssessmentInput {
    """
    Metadata for the new Content
    """
    metadata: UpdateContentMetadataInput!
    """
    Assessment metadata
    """
    assessmentMetadata: AssessmentMetadataInput!
}

input CreateContentMetadataInput {
    """
    Name of the content
    """
    name: String!
    """
    Type of the content
    """
    type: ContentType!
    """
    Suggested date when the content should be done
    """
    suggestedDate: DateTime!
    """
    Number of reward points a student receives for completing this content
    """
    rewardPoints: Int!
    """
    ID of the chapter this content is associated with
    """
    chapterId: UUID!
    """
    TagNames this content is tagged with
    """
    tagNames: [String!]! = []
}

input UpdateContentMetadataInput {
    """
    Name of the content
    """
    name: String!
    """
    Date when the content should be done
    """
    suggestedDate: DateTime!
    """
    Number of reward points a student receives for completing this content
    """
    rewardPoints: Int!
    """
    ID of the chapter this content is associated with
    """
    chapterId: UUID!
    """
    TagNames this content is tagged with
    """
    tagNames: [String!]! = []
}

input AssessmentMetadataInput {
    """
    Number of skill points a student receives for completing this content
    """
    skillPoints: Int! @PositiveOrZero
    """
    Type of the assessment
    """
    skillTypes: [SkillType!]!
    """
    The initial learning interval for the assessment in days.
    This is the interval that is applied after the assessment is completed the first time.
    Following intervals are calculated based on the previous interval and the user's performance.
    If this is null, the assessment will never be scheduled for review, which
    is useful for assessments that are not meant to be repeated.
    """
    initialLearningInterval: Int @PositiveOrZero
}

input CreateSectionInput {

    """
    Chapter Section will belong to
    """
    chapterId: UUID!
    """
    name given to Section
    """
    name: String!
}


input CreateStageInput{

    """
    updated List of UUIDs for content labeled as required in this Stage
    """
    requiredContents: [UUID!]!

    """
    updated List of UUIDs for content labeled as optional in this Stage
    """
    optionalContents: [UUID!]!
}

input UpdateStageInput{

    """
    Identifier of the Stage
    """
    id: UUID!

    """
    updated List of UUIDs for content labeled as required in this Stage
    """
    requiredContents: [UUID!]!

    """
    updated List of UUIDs for content labeled as optional in this Stage
    """
    optionalContents: [UUID!]!
}

